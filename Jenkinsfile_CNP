#!groovy

@Library("Infrastructure")

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "disposer"
def component = "fee-and-pay"
def branchesToSync = ['demo','perftest','ithc']


def secrets = [
  'disposer-${env}': [
    secret('app-insights-connection-string', 'app-insights-connection-string'),
    secret('s2s-secret-disposer-idam-user', 'S2S_SECRET_DISPOSER_IDAM_USER')
  ]
]

def reportConfig = [
  allowMissing         : true,
  alwaysLinkToLastBuild: true,
  keepAll              : true,
  reportDir            : "build/reports/tests/test",
  reportFiles          : "index.html",
  reportName           : "disposer-fee-and-pay Test Report"
]

withPipeline(type, product, component) {
  enableAksStagingDeployment()
  disableLegacyDeployment()
  nonServiceApp()
  syncBranchesWithMaster(branchesToSync)
  enableSlackNotifications("#disposer-builds")
  loadVaultSecrets(secrets)

  afterAlways('test') {

    junit 'build/test-results/test/**/*.xml'
    archiveArtifacts 'build/reports/tests/test/index.html'

    publishHTML target: reportConfig
  }

  afterAlways('akschartsinstall') {
    // Set required environment variables to run functional tests apart from one in vaults.
    env.S2S_URL = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'

    echo "Just waiting a while to ensure that the pod has run the job"
    sh "sleep 120s"

    // Execute functional tests
    echo "Verifying that functional test data was processed correctly"
    try {
      GradleBuilder builder = new GradleBuilder(this, product)
      builder.gradle('functional')
      echo "Verifying that functional test run completed"
    } finally {
      junit '**/test-results/**/*.xml'
    }
  }

  afterAlways('functionalTest:preview') {
    junit 'build/test-results/functional/**/*.xml'
    archiveArtifacts 'build/reports/tests/functional/index.html'

    publishHTML target: reportConfig
  }

  afterAlways('functionalTest:aat') {
    junit 'build/test-results/functional/**/*.xml'
    archiveArtifacts 'build/reports/tests/functional/index.html'

    publishHTML target: reportConfig
  }
}
